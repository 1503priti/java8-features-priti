Functional Interface:
The Interface who contains only one abstract method but can have multiple default and static 
method is called functional interface.
Ex 
Runnable -> run()
Callable -> call()
Comparable -> compareTo()
Comparator -> compare()

@FunctionalInterface is not mandatory. Any interface who has only one abstract method is Functional Interface.
we can write Lambda function for abstract method which is in Functional interface.
convert m1() to anonymous function using lambda function.
@FunctionalInterface
public interface MyFunctionalInterface {

	void m1();

	default void m2() {
		System.out.println("Default method-1");
	}

	default void m3() {
		System.out.println("Default method -2");
	}

	static void m4() {
		System.out.println("static method-1");
	}
}

Advantages:
https://www.nagarro.com/en/blog/post/26/lambda-expressions-in-java-8-why-and-how-to-use-them

1. It reduces the boiler plate code
2. 
